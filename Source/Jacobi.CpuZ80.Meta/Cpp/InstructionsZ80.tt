<#@ template language="C#" debug="True" hostspecific="True" #>
<#@ output extension="txt" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="InstructionsZ80_hpp.tt" #>
<#@ include file="InstructionsZ80_cpp.tt" #>
<#@ Assembly Name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="$(TargetDir)\Jacobi.CpuZ80.Meta.dll" #>
<#@ import namespace="Jacobi.CpuZ80.Meta" #>
<#
    // Using https://github.com/olegsych/T4Toolbox

    const string TargetProjectPath = @"..\..\Jacobi.CpuZ80\Jacobi.CpuZ80.vcxproj";

    var filePath = Path.Combine(GetSolutionDirectory(), "Jacobi.CpuZ80.Meta", "InstructionsZ80.json");
    var setInfo = InstructionSetInfo.FromJsonFile(filePath);

    var hpp = new InstructionZ80_hpp(setInfo);
    hpp.Output.File = string.Format("InstructionZ80.hpp");
    hpp.Output.Project = TargetProjectPath;
    hpp.Render();

    var cpp = new InstructionZ80_cpp(setInfo);
    cpp.Output.File = string.Format("InstructionZ80.cpp");
    cpp.Output.Project = TargetProjectPath;
    cpp.Render();
#>


<#+
public string GetSolutionDirectory()
{
    var serviceProvider = this.Host as IServiceProvider;
    var dte = serviceProvider.GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE;
    return System.IO.Path.GetDirectoryName(dte.Solution.FullName);
}
#>